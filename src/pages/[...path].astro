---
import { getSecret } from "astro:env/server";

import Layout from "../layouts/Layout.astro";

import Post from "../views/Post.astro";
import Posts from "../views/Posts.astro";
import Author from "../views/Author.astro";
import Authors from "../views/Authors.astro";
import Projects from "../views/Projects.astro";
import Contact from "../views/Contact.astro";

import AsideContainer from "../components/AsideContainer.astro";
import MainContainer from "../components/MainContainer.astro";
import SectionWrapper from "../components/SectionWrapper.astro";

const BASE_URL = getSecret("API_BASE_URL");

const path = "/" + (Astro.params.path || "");
const response = await fetch(`${BASE_URL}/initial-url-data?path=${path}`);
const data = await response.json();
const contentType = data.url?.content_type;

console.log(data);

if (!contentType) {
  return new Response(null, {
    status: 404,
    statusText: "Not Found",
  });
}

const getTitle = (data: any) => {
  // TODO: move to api as data.meta.title
  switch (data.url?.content_type) {
    case "AUTHORS":
      return "Autorzy";
    case "AUTHOR":
      return data.author.name;
    case "POST":
      return data.post.title;
    case "POSTS":
      return "Artyku≈Çy";
    case "PROJECTS":
      return "Projekty";
    case "CONTACT":
      return "Kontakt";
    default:
      return "";
  }
};

const ViewsMap = {
  AUTHORS: Authors,
  AUTHOR: Author,
  POST: Post,
  POSTS: Posts,
  PROJECTS: Projects,
  CONTACT: Contact,
} as Record<string, any>;

const View = ViewsMap[contentType];

if (!View) {
  return new Response(null, {
    status: 500,
    statusText: "Internal Server Error",
  });
}
---

<Layout title={getTitle(data)}>
  <View {...data} />
</Layout>
